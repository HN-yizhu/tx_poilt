<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poilt.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.poilt.pojo.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_alias" jdbcType="VARCHAR" property="userAlias" />
    <result column="user_cert_no" jdbcType="VARCHAR" property="userCertNo" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="credit_rate" jdbcType="CHAR" property="creditRate" />
    <result column="history_total" jdbcType="INTEGER" property="historyTotal" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, user_alias, user_cert_no, open_id, credit_rate, history_total, user_no, 
    user_uuid, create_time
  </sql>
  <select id="selectByExample" parameterType="com.poilt.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.poilt.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.poilt.pojo.User">
    insert into user (id, user_name, user_alias, 
      user_cert_no, open_id, credit_rate, 
      history_total, user_no, user_uuid, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userAlias,jdbcType=VARCHAR}, 
      #{userCertNo,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{creditRate,jdbcType=CHAR}, 
      #{historyTotal,jdbcType=INTEGER}, #{userNo,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.poilt.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAlias != null">
        user_alias,
      </if>
      <if test="userCertNo != null">
        user_cert_no,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="creditRate != null">
        credit_rate,
      </if>
      <if test="historyTotal != null">
        history_total,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="userUuid != null">
        user_uuid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAlias != null">
        #{userAlias,jdbcType=VARCHAR},
      </if>
      <if test="userCertNo != null">
        #{userCertNo,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="creditRate != null">
        #{creditRate,jdbcType=CHAR},
      </if>
      <if test="historyTotal != null">
        #{historyTotal,jdbcType=INTEGER},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userUuid != null">
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.poilt.pojo.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAlias != null">
        user_alias = #{record.userAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.userCertNo != null">
        user_cert_no = #{record.userCertNo,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.creditRate != null">
        credit_rate = #{record.creditRate,jdbcType=CHAR},
      </if>
      <if test="record.historyTotal != null">
        history_total = #{record.historyTotal,jdbcType=INTEGER},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userUuid != null">
        user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_alias = #{record.userAlias,jdbcType=VARCHAR},
      user_cert_no = #{record.userCertNo,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      credit_rate = #{record.creditRate,jdbcType=CHAR},
      history_total = #{record.historyTotal,jdbcType=INTEGER},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>